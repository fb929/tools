on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: release
permissions: write-all

jobs:
  create_release:
    name: create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build:
    runs-on: ubuntu-22.04
    needs: create_release
    strategy:
      matrix:
        arch:
          - noarch
        os:
          - linux
        include:
          - arch: noarch
            rpm_arch: noarch
            deb_arch: all
    steps:
      - uses: actions/checkout@v3

      # build {{
      - name: make build
        run: make build
      # }}

      - name: get release version
        id: release-version
        run: |
          echo "$GITHUB_REF_NAME" | sed 's|^[a-zA-Z]\+|RELEASE_VERSION=|' >> $GITHUB_OUTPUT

      # create asset {{
      - name: create package deb
        uses: bpicode/github-action-fpm@master
        with:
          fpm_opts:
            --name ${{ github.event.repository.name }}
            --version ${{ steps.release-version.outputs.RELEASE_VERSION }}
            --architecture ${{ matrix.deb_arch }}
            --url ${{ github.repositoryUrl }}
            --description "commit ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
            --exclude '*/.gitignore'
            --exclude '*/.git'
            --input-type dir
            --output-type deb
            --chdir ./build
          fpm_args: ./
      - name: create package rpm
        uses: bpicode/github-action-fpm@master
        with:
          fpm_opts:
            --name ${{ github.event.repository.name }}
            --version ${{ steps.release-version.outputs.RELEASE_VERSION }}
            --architecture ${{ matrix.rpm_arch }}
            --url ${{ github.repositoryUrl }}
            --description "commit ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
            --exclude '*/.gitignore'
            --exclude '*/.git'
            --input-type dir
            --output-type rpm
            --chdir ./build
          fpm_args: ./
      # }}

      - name: debug
        run: |
          ls -al ./

      # upload-release-asset {{
      - name: upload-release-asset deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}_${{ steps.release-version.outputs.RELEASE_VERSION }}_${{ matrix.deb_arch }}.deb
          asset_name: ${{ github.event.repository.name }}_${{ steps.release-version.outputs.RELEASE_VERSION }}_${{ matrix.deb_arch }}.deb
          asset_content_type: application/octet-stream

      - name: upload-release-asset rpm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}-${{ steps.release-version.outputs.RELEASE_VERSION }}-1.${{ matrix.rpm_arch }}.rpm
          asset_name: ${{ github.event.repository.name }}-${{ steps.release-version.outputs.RELEASE_VERSION }}-1.${{ matrix.rpm_arch }}.rpm
          asset_content_type: application/octet-stream
      # }}
